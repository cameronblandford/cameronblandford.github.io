{"version":3,"sources":["App.jsx","serviceWorker.js","index.js"],"names":["App","items","i","push","className","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6QAwGeA,MArGf,WAEE,IADA,IAAIC,EAAQ,GACHC,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAAME,KAAKD,GAEb,OACE,6BACE,iCAEA,yBAAKE,UAAU,QACb,6BACE,iDACA,yPAEF,6BACE,8CACA,4BACE,wCACA,yCACA,2CACA,uCACA,wCACA,yCACA,0CAGJ,6BACE,0CACA,4BACE,+CACA,8CACA,oDAGJ,6BACE,wCACA,4BACE,4BAAI,uBAAGC,KAAK,+BAAR,qBACJ,4BAAI,uBAAGA,KAAK,qBAAR,SACJ,4BAAI,uBAAGA,KAAK,gCAAR,SACJ,4BAAI,uBAAGA,KAAK,4BAAR,gBACJ,4BAAI,uBAAGA,KAAK,yBAAR,eACJ,4BAAI,uBAAGA,KAAK,+BAAR,eACJ,4BAAI,uBAAGA,KAAK,8BAAR,eACJ,4BAAI,uBAAGA,KAAK,0BAAR,kBACJ,4BAAI,uBAAGA,KAAK,oCAAR,oBACJ,4BAAI,uBAAGA,KAAK,uCAAR,yBAGR,6BACE,yCACA,4BACE,4CACA,+CACA,6CAGJ,6BAAK,0CACH,4BACE,oDACA,kDACA,0DAGJ,6BAAK,kDACH,4BACE,2CACA,4FAGJ,6BACE,2CACA,4BACE,2CACA,gDAGJ,6BACE,+CACA,4BACE,yCACA,2CACA,sCACA,4CACA,uCACA,sCACA,0CAGJ,6BACE,4CACA,4BACE,0CACA,4BAAI,uBAAGA,KAAK,yBAAR,kBCpFIC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.46dc8da8.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction App() {\n  let items = [];\n  for (let i = 0; i < 10; i++) {\n    items.push(i);\n  }\n  return (\n    <div>\n      <header>\n      </header>\n      <div className=\"grid\">\n        <div>\n          <h1>Cameron Blandford</h1>\n          <p>These text-bits serve as reminders for articles I'd like to write, things I'd like to make and/or link to, and public accountability to follow through. I will also be cataloguing workouts and meditation sessions here.</p>\n        </div>\n        <div>\n          <h2>Personal Links</h2>\n          <ul>\n            <li>Facebook</li>\n            <li>Instagram</li>\n            <li>Photography</li>\n            <li>Twitter</li>\n            <li>Substack</li>\n            <li>Wikipedia</li>\n            <li>LinkedIn</li>\n          </ul>\n        </div>\n        <div>\n          <h2>Meditation</h2>\n          <ul>\n            <li>Where I started</li>\n            <li>Where I am now</li>\n            <li>Where I want to be</li>\n          </ul>\n        </div>\n        <div>\n          <h2>Blogroll</h2>\n          <ul>\n            <li><a href=\"https://slatestarcodex.com/\">Slate Star Codex</a></li>\n            <li><a href=\"https://xkcd.com/\">XKCD</a></li>\n            <li><a href=\"https://www.smbc-comics.com/\">SMBC</a></li>\n            <li><a href=\"https://meaningness.com/\">Meaningness</a></li>\n            <li><a href=\"https://kajsotala.fi/\">Kaj Sotala</a></li>\n            <li><a href=\"https://www.ribbonfarm.com/\">Ribbonfarm</a></li>\n            <li><a href=\"https://www.lesswrong.com/\">Less Wrong</a></li>\n            <li><a href=\"https://www.gwern.net/\">Gwern Branwen</a></li>\n            <li><a href=\"https://stefanfschubert.com/blog\">Stefan Schubert</a></li>\n            <li><a href=\"https://theunitofcaring.tumblr.com/\">The Unit of Caring</a></li>\n          </ul>\n        </div>\n        <div>\n          <h2>Tweetroll</h2>\n          <ul>\n            <li>Kelsey Piper</li>\n            <li>Scott Alexander</li>\n            <li>Meaningness</li>\n          </ul>\n        </div>\n        <div><h2>Mentorship</h2>\n          <ul>\n            <li>Why become a mentor?</li>\n            <li>Why have a mentor?</li>\n            <li>Hands-off mass-mentoring</li>\n          </ul>\n        </div>\n        <div><h2>Effective Altruism</h2>\n          <ul>\n            <li>What is it?</li>\n            <li>Why doesn't everyone do it? (Arguments and Misconceptions)</li>\n          </ul>\n        </div>\n        <div>\n          <h2>Rationalism</h2>\n          <ul>\n            <li>What is it?</li>\n            <li>What isn't it?</li>\n          </ul>\n        </div>\n        <div>\n          <h2>Other Interests</h2>\n          <ul>\n            <li>Gardening</li>\n            <li>Hydroponics</li>\n            <li>Poetry</li>\n            <li>Powerlifting</li>\n            <li>Cooking</li>\n            <li>Baking</li>\n            <li>Pedagogy</li>\n          </ul>\n        </div>\n        <div>\n          <h2>Web Projects</h2>\n          <ul>\n            <li>foamflower</li>\n            <li><a href=\"https://blandford.io/\">old site</a></li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}